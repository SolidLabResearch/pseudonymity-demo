{
  "name": "evaluation",
  "version": "0.0.1",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "tsc",
    "docker:stop": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile all down -t 0",
    "docker:start": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile all up --remove-orphans -d --wait",
    "docker:logs": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile all logs -f",
    "docker:rm": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile all rm --force",
    "docker:setup": "./clean_tmp_files.sh && npm run docker:stop && npm run docker:rm && npm run docker:start",
    "docker:test:run": "docker compose -f docker-compose.test.yml up --remove-orphans -d --wait",
    "docker:test:stop": "docker compose -f docker-compose.test.yml stop -t 0",
    "docker:test:rm": "docker compose -f docker-compose.test.yml rm --force",
    "docker:test:logs": "docker compose -f docker-compose.test.yml logs -f",
    "docker:test:clean": "npm run docker:test:stop && npm run docker:test:rm",
    "docker:test:clean-start": "npm run docker:test:clean && npm run docker:test:run",
    "docker:test:components:setup:stop": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile components down -t 0",
    "docker:test:components:setup:start": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile components up --remove-orphans -d --wait",
    "docker:test:usecases:setup:stop": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile usecases down -t 0",
    "docker:test:usecases:setup:start": "docker compose --env-file $(pwd)/.test.env -f docker-compose.yml --profile usecases up --remove-orphans -d --wait",
    "docker:test:usecases:setup": "npm run docker:test:usecases:setup:stop && npm run docker:test:usecases:setup:start",
    "setup": "npx ts-node src/setup.ts",
    "setup:watch": "nodemon --config nodemon.json --exec npm run setup",
    "d2:setup:watch": "d2 --watch ./diagrams/setup.d2 ./diagrams/setup.png",
    "d2:sequence:3rdparty:watch": "d2 --watch ./diagrams/sequence-3rd-party.d2 ./diagrams/sequence-3rd-party.png",
    "d2:sequence:did:watch": "d2 --watch ./diagrams/sequence-did-key.d2 ./diagrams/sequence-did-key.png",
    "d2:trust:watch": "d2 --watch ./diagrams/trust.d2 ./diagrams/trust.png",
    "d2:credential:watch": "d2 --watch ./diagrams/credential-exchange.d2 ./diagrams/credential-exchange.png",
    "test": "npm run test:utils && npm run test:components && npm run test:usecases && npm run test:evaluation",
    "test:utils": "jest -i src/tests/utils/*.test.ts",
    "test:components:setup": "npm run docker:test:components:setup:stop && npm run docker:test:components:setup:start",
    "test:components:teardown": "npm run docker:test:components:setup:stop",
    "test:components:CssProxy": "npm run test:components:setup && jest -i src/tests/components/CssProxy.test.ts",
    "test:components:DidActor": "npm run test:components:setup && jest -i src/tests/components/DidActor.test.ts",
    "test:components:SolidVCActor": "npm run test:components:setup && jest -i src/tests/components/SolidVCActor.test.ts",
    "test:components:DidVCActor": "npm run test:components:setup && jest -i src/tests/components/DidVCActor.test.ts",
    "test:components:WebIdOnDidKeyActor": "npm run test:components:setup && jest -i src/tests/components/WebIdOnDidKey.test.ts",
    "test:components:WebIdOnWebIdActor": "npm run test:components:setup && jest -i src/tests/components/WebIdOnWebId.test.ts",
    "test:components": "npm run test:components:CssProxy && npm run test:components:DidActor && npm run test:components:SolidVCActor && npm run test:components:DidVCActor && npm run test:components:WebIdOnDidKeyActor && npm run test:components:WebIdOnWebIdActor && npm run test:components:teardown",
    "test:usecases:setup": "npm run docker:test:usecases:setup:stop && npm run docker:test:usecases:setup:start",
    "test:usecases:teardown": "npm run docker:test:usecases:setup:stop",
    "test:usecases:sign-verify": "npm run test:usecases:setup && jest -i src/tests/usecases/sign-verify.test.ts",
    "test:usecases:sign-verify-WebIdOnWebIdActor": "npm run test:usecases:setup && jest -i src/tests/usecases/sign-verify-WebIdOnWebIdActor.test.ts",
    "test:usecases:sign-verify-WebIdOnDidKeyActor": "npm run test:usecases:setup && jest -i src/tests/usecases/sign-verify-WebIdOnDidKeyActor.test.ts",
    "test:usecases": "npm run test:usecases:sign-verify && npm run test:usecases:sign-verify-WebIdOnWebIdActor && npm run test:usecases:sign-verify-WebIdOnDidKeyActor &&  npm run test:usecases:teardown",
    "test:evaluation:setup": "npm run docker:test:usecases:setup:stop && npm run docker:test:usecases:setup:start",
    "test:evaluation:teardown": "npm run docker:test:usecases:setup:stop",
    "test:evaluation:web-resolvable": "npm run test:evaluation:setup && jest -i src/tests/evaluation/verify-using-web-resolvable-did-document.test.ts",
    "test:evaluation:did-key": "npm run test:evaluation:setup && jest -i src/tests/evaluation/verify-using-did-key.test.ts",
    "test:evaluation": "npm run test:evaluation:did-key && npm run test:evaluation:web-resolvable && npm run test:evaluation:teardown",
    "profile:did-key": "npx ts-node src/profiling/did-key.ts",
    "profile:web-resolvable": "npx ts-node src/profiling/web-resolvable.ts",
    "profile_old": "npm run test:usecases:setup && npm run profile:web-resolvable && npm run profile:did-key",
    "profile": "npm run test:usecases:setup && npx ts-node src/profiling/profile.ts",
    "profile:single": "npm run profile -- --dcloConfig=0 --n=1",
    "profile:3rd-party": "npm run test:usecases:setup && ts-node src/profiling/third-party-pseudonymizer.ts",
    "sandbox": "npx ts-node sandbox.ts",
    "sandbox:watch": "nodemon -w sandbox.ts --exec npm run sandbox"
  },
  "author": "GDM",
  "license": "MIT",
  "devDependencies": {
    "@jest-performance-reporter/core": "^2.1.3",
    "@jest/globals": "^29.7.0",
    "@mattrglobal/jsonld-signatures-bbs": "^1.2.0",
    "@solid/community-server": "^7.0.1",
    "@tsconfig/node18": "^18.2.2",
    "@types/express": "^4.17.20",
    "@types/jsonld": "^1.5.12",
    "@types/n3": "^1.16.4",
    "@types/node": "^20.8.7",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "@comunica/query-sparql": "^2.10.0",
    "@digitalbazaar/did-method-key": "^5.1.0",
    "@digitalbazaar/vc": "^6.0.2",
    "@digitalcredentials/vc-data-model": "^1.1.1",
    "@inrupt/solid-client": "^1.30.2",
    "@inrupt/solid-client-authn-core": "^1.17.3",
    "body-parser": "^1.20.2",
    "bs58": "^5.0.0",
    "credentials-context": "^2.0.0",
    "cross-fetch": "^4.0.0",
    "did-context": "^3.1.1",
    "express": "^4.18.2",
    "file-type": "^18.5.0",
    "fs-extra": "^11.1.1",
    "jsonld": "^8.3.1",
    "jsonld-signatures": "7.0.0",
    "klona": "^2.0.6",
    "mime-types": "^2.1.35",
    "n3": "^1.17.2",
    "pino": "^8.16.0",
    "pino-pretty": "^10.2.3",
    "rdflib": "^2.2.32",
    "rfc4648": "^1.5.3"
  },
  "engines": {
    "node": ">=18.0"
  }
}
